{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-6d107c68ee9126e1.js","utils.js","GameState.js","node_modules/@parcel/runtime-js/lib/runtime-f55a1543d79e90f6.js","GenericObject.js","Background.js","node_modules/@parcel/runtime-js/lib/runtime-a7a18b193f11f0b0.js","Ground.js","node_modules/@parcel/runtime-js/lib/runtime-0f042ad469030613.js","Bird.js","node_modules/howler/dist/howler.js","node_modules/@parcel/runtime-js/lib/runtime-dd971f2a5370fd0e.js","Pipe.js","PipePair.js","audio.js","canvas.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"bg8Kk\\\":\\\"index.ee2bf3dc.js\\\",\\\"aXNjT\\\":\\\"background.8939a860.png\\\",\\\"isji5\\\":\\\"ground.c527a7fc.png\\\",\\\"dp9nw\\\":\\\"bird.17b47c7c.png\\\",\\\"eJ2RD\\\":\\\"pipe.7471d7f9.png\\\"}\"));","export const createImage = function (imageSrc) {\r\n  const image = new Image();\r\n  image.src = imageSrc;\r\n  return image;\r\n};\r\n\r\nexport const randomIntFromRange = function (min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n","import { scoreUI, liveScoreUI } from './canvas';\r\n\r\nexport default class GameState {\r\n   static startScreen() {\r\n      scoreUI.innerText = 0;\r\n      liveScoreUI.classList.remove('live-score');\r\n\r\n      return `<h2>Flappy Bird</h2>\r\n      <p>Press Enter to Start &#9654;</p>`;\r\n   }\r\n\r\n   static lostScreen(score) {\r\n      liveScoreUI.classList.add('live-score');\r\n\r\n      return `<h2>Oops! You Lost</h2>\r\n      <p class=\"result-point\">score : <span>${score}</span></p>\r\n      <p>Press Enter to coninue playing &#9654;</p>`;\r\n   }\r\n}\r\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"aXNjT\")).toString();","import { canvas } from './canvas';\r\nimport { c } from './canvas';\r\n\r\nexport default class GenericObjects {\r\n  constructor({ position }, image) {\r\n    this.position = { x: position.x, y: position.y };\r\n    this.width = image.width;\r\n    this.height = image.height;\r\n    this.image = image;\r\n  }\r\n\r\n  draw(x = this.position.x) {\r\n    c.drawImage(this.image, x, this.position.y);\r\n  }\r\n\r\n  update() {}\r\n}\r\n","import { canvas } from './canvas';\r\nimport { c } from './canvas';\r\nimport GenericObjects from './GenericObject';\r\n\r\nexport default class Background extends GenericObjects {\r\n   constructor({ position }, image) {\r\n      super({ position }, image);\r\n      this.position = { x: position.x, y: position.y };\r\n      // this.width = image.width;\r\n      // this.height = image.height;\r\n      // this.image = image;\r\n   }\r\n\r\n   draw(x = this.position.x) {\r\n      c.drawImage(this.image, x, this.position.y);\r\n   }\r\n\r\n   update() {}\r\n}\r\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"isji5\")).toString();","import { canvas } from './canvas';\r\nimport { c } from './canvas';\r\nimport GenericObjects from './GenericObject';\r\n\r\nexport default class Ground extends GenericObjects {\r\n   constructor({ position }, image) {\r\n      super({ position }, image);\r\n      this.position = { x: position.x, y: position.y };\r\n      // this.width = image.width;\r\n      // this.height = image.height;\r\n      // this.image = image;\r\n   }\r\n\r\n   draw(x = this.position.x) {\r\n      c.drawImage(this.image, x, this.position.y);\r\n   }\r\n\r\n   update() {}\r\n}\r\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dp9nw\")).toString();","import { canvas, PIPE_HEIGHT, PIPE_WIDHT, VIRTUAL_HEIGHT } from './canvas';\r\nimport { c } from './canvas';\r\n\r\nimport GenericObjects from './GenericObject';\r\n\r\nexport default class Bird extends GenericObjects {\r\n   #GRAVITY = 0.18;\r\n\r\n   constructor({ position }, image) {\r\n      super({ position }, image);\r\n\r\n      this.position = {\r\n         x: position.x - this.width / 2,\r\n         y: position.y - this.height / 2,\r\n      };\r\n\r\n      this.velocity = { x: 0, y: 0 };\r\n   }\r\n\r\n   draw() {\r\n      c.drawImage(this.image, this.position.x, this.position.y);\r\n   }\r\n\r\n   update() {\r\n      this.draw();\r\n\r\n      this.velocity.y += this.#GRAVITY * 1;\r\n      this.position.y += this.velocity.y;\r\n   }\r\n\r\n   collides(pipe) {\r\n      if (\r\n         this.position.x + 0 + (this.width - 0) >= pipe.position.x &&\r\n         this.position.x + 0 <= pipe.position.x + PIPE_WIDHT\r\n      ) {\r\n         if (\r\n            this.position.y + 0 + (this.height - 0) >= pipe.position.y &&\r\n            this.position.y + 0 <= pipe.position.y + PIPE_HEIGHT\r\n         ) {\r\n            return true;\r\n         }\r\n      }\r\n\r\n      return false;\r\n   }\r\n}\r\n","/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"eJ2RD\")).toString();","import { canvas, PIPE_HEIGHT, VIRTUAL_WIDTH } from './canvas';\r\nimport { c } from './canvas';\r\nimport { randomIntFromRange } from './utils';\r\nimport { createImage } from './utils';\r\nimport pipeImg from './pipe.png';\r\n\r\nimport GenericObjects from './GenericObject';\r\n\r\nexport default class Pipe extends GenericObjects {\r\n   #PIPE_SCROLL = -0.5;\r\n\r\n   constructor({ position }, orientation, image = createImage(pipeImg)) {\r\n      super({ position }, image);\r\n      this.position = {\r\n         x: VIRTUAL_WIDTH,\r\n         y: position.y,\r\n      };\r\n\r\n      this.orientation = orientation;\r\n   }\r\n\r\n   draw() {\r\n      this.mirrorImage(\r\n         this.image,\r\n         this.position.x,\r\n         this.orientation == 'top'\r\n            ? this.position.y + PIPE_HEIGHT\r\n            : this.position.y,\r\n         false,\r\n         this.orientation == 'top' ? true : false\r\n      );\r\n   }\r\n\r\n   update() {\r\n      this.draw();\r\n   }\r\n\r\n   mirrorImage(image, x = 0, y = 0, horizontal = false, vertical = false) {\r\n      c.save();\r\n      c.setTransform(\r\n         horizontal ? -1 : 1,\r\n         0,\r\n         0,\r\n         vertical ? -1 : 1,\r\n         x + (horizontal ? image.width : 0), // x origin\r\n         y + 0 // y origin\r\n      );\r\n      c.drawImage(image, 0, 0);\r\n      c.restore();\r\n   }\r\n}\r\n","import {\r\n   canvas,\r\n   GAP_HEIGHT,\r\n   VIRTUAL_WIDTH,\r\n   VIRTUAL_HEIGHT,\r\n   PIPE_WIDHT,\r\n   PIPE_HEIGHT,\r\n   PIPE_SPEED,\r\n} from './canvas';\r\nimport { c } from './canvas';\r\nimport Pipe from './Pipe';\r\n\r\nexport default class PipePair {\r\n   constructor({ position }) {\r\n      this.position = { x: VIRTUAL_WIDTH + 32, y: position.y };\r\n      this.pipes = [\r\n         new Pipe({ position: { y: this.position.y } }, 'top'),\r\n         new Pipe(\r\n            { position: { y: this.position.y + PIPE_HEIGHT + GAP_HEIGHT } },\r\n            'bottom'\r\n         ),\r\n      ];\r\n\r\n      this.scored = false;\r\n   }\r\n\r\n   draw() {\r\n      this.pipes.forEach(pipe => pipe.update());\r\n   }\r\n\r\n   update() {\r\n      this.draw();\r\n\r\n      this.position.x -= PIPE_SPEED * 1;\r\n      this.pipes[0].position.x = this.position.x;\r\n      this.pipes[1].position.x = this.position.x;\r\n   }\r\n}\r\n","import { Howl } from 'howler';\r\n\r\nexport default audio = {\r\n   backgroundMusic: new Howl({\r\n      src: ['./audio/marios_way.mp3'],\r\n   }),\r\n   jump: new Howl({\r\n      src: ['./audio/jump.wav'],\r\n   }),\r\n   scoring: new Howl({\r\n      src: ['./audio/score.wav'],\r\n   }),\r\n   lost: new Howl({\r\n      src: ['./audio/hurt.wav'],\r\n   }),\r\n};\r\n","import { createImage, randomIntFromRange } from './utils';\r\n\r\nimport GameState from './GameState';\r\n\r\nimport backgroundImg from './background.png';\r\nimport Background from './Background';\r\nlet backgroundScroll = 0;\r\n\r\nimport groundImg from './ground.png';\r\nimport Ground from './Ground.js';\r\nlet groundScroll = 0;\r\n\r\nimport birdImg from './bird.png';\r\nimport Bird from './Bird';\r\n\r\nimport pipeImg from './pipe.png';\r\nimport Pipe from './Pipe';\r\nexport const GAP_HEIGHT = 90;\r\nexport const PIPE_SPEED = 2;\r\nexport const PIPE_HEIGHT = 288;\r\nexport const PIPE_WIDHT = 70;\r\n\r\nimport PipePair from './PipePair';\r\nimport audio from './audio';\r\n\r\nconst BACKGROUND_SCROLL_SPEED = 0.9;\r\nconst GROUND_SCROLL_SPEED = 1.8;\r\n\r\nconst BACKGROUND_LOOPING_POINT = 413;\r\n\r\nexport const canvas = document.getElementById('canvas');\r\nexport const c = canvas.getContext('2d');\r\n\r\nconst containerUI = document.querySelector('.flappy-gui-states');\r\nexport const scoreUI = document.querySelector('.score-point span');\r\nexport const liveScoreUI = document.querySelector('.score-point');\r\nconst resultScoreUI = document.querySelector('.result-point span');\r\n\r\nconst btnStart = document.getElementById('btn-start');\r\nconst btnJump = document.getElementById('btn-jump');\r\n\r\nexport const VIRTUAL_WIDTH = 512;\r\nexport const VIRTUAL_HEIGHT = 288;\r\n\r\ncanvas.width = VIRTUAL_WIDTH;\r\ncanvas.height = VIRTUAL_HEIGHT;\r\n\r\nexport let engine = false;\r\nlet background;\r\nlet ground;\r\nlet bird;\r\nlet pipesPairs;\r\nlet spawnTimer;\r\nlet lastY;\r\nlet score;\r\n\r\nlet msPrev = window.performance.now();\r\nlet fps = 60;\r\nlet fpsInterval = 1000 / fps;\r\nfunction init() {\r\n   background = new Background(\r\n      {\r\n         position: { x: -1, y: -1 },\r\n      },\r\n      createImage(backgroundImg)\r\n   );\r\n   ground = new Ground(\r\n      {\r\n         position: { x: -1, y: VIRTUAL_HEIGHT - 16 },\r\n      },\r\n      createImage(groundImg)\r\n   );\r\n   bird = new Bird(\r\n      {\r\n         position: { x: VIRTUAL_WIDTH / 2, y: VIRTUAL_HEIGHT / 2 },\r\n      },\r\n      createImage(birdImg)\r\n   );\r\n\r\n   pipesPairs = [];\r\n   spawnTimer = 0;\r\n   lastY = -PIPE_HEIGHT - Math.random() * 80 + 20;\r\n   score = 0;\r\n   containerUI.insertAdjacentHTML('afterbegin', GameState.startScreen());\r\n}\r\n\r\nfunction animate() {\r\n   requestAnimationFrame(animate);\r\n\r\n   const msNow = window.performance.now();\r\n   const elapsed = msNow - msPrev;\r\n   if (elapsed < fpsInterval) return;\r\n   msPrev = msNow - (elapsed % fpsInterval); // 3.34\r\n\r\n   c.fillStyle = 'white';\r\n   c.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n   backgroundScroll =\r\n   (backgroundScroll + BACKGROUND_SCROLL_SPEED * 1) % BACKGROUND_LOOPING_POINT; // prettier-ignore\r\n   groundScroll = \r\n   (groundScroll + GROUND_SCROLL_SPEED * 1) % VIRTUAL_WIDTH; // prettier-ignore\r\n\r\n   spawnTimer++;\r\n\r\n   if (spawnTimer > 60 && engine) {\r\n      // prettier-ignore\r\n      let y = Math.max(-PIPE_HEIGHT + 10, Math.min(lastY + randomIntFromRange(-20, 20), VIRTUAL_HEIGHT - 90 - PIPE_HEIGHT))\r\n      lastY = y;\r\n\r\n      pipesPairs.push(new PipePair({ position: { y: y } }));\r\n      spawnTimer = 0;\r\n   }\r\n\r\n   //////////////////////////////////\r\n   if (engine) {\r\n      background.draw(-backgroundScroll);\r\n\r\n      for (let p = pipesPairs.length - 1; p >= 0; p--) {\r\n         let pair = pipesPairs[p];\r\n\r\n         pair.pipes.forEach(pipe => {\r\n            if (bird.collides(pipe)) {\r\n               // prettier-ignore\r\n               audio.lost.play();\r\n               containerUI.insertAdjacentHTML(\r\n                  'afterbegin',\r\n                  GameState.lostScreen(score)\r\n               );\r\n               engine = false;\r\n            }\r\n         });\r\n\r\n         if (!pair.scored) {\r\n            if (pair.position.x + PIPE_WIDHT < bird.position.x) {\r\n               audio.scoring.play();\r\n               score = score + 1;\r\n               scoreUI.innerText = score;\r\n               pair.scored = true;\r\n            }\r\n         }\r\n\r\n         if (pair.position.x + PIPE_WIDHT < 0) {\r\n            pipesPairs.splice(p, 1);\r\n         } else {\r\n            pair.update();\r\n         }\r\n      }\r\n\r\n      ground.draw(-groundScroll);\r\n\r\n      if (bird.position.y + bird.height + ground.height > VIRTUAL_HEIGHT) {\r\n         audio.lost.play();\r\n         engine = false;\r\n         containerUI.insertAdjacentHTML(\r\n            'afterbegin',\r\n            GameState.lostScreen(score)\r\n         );\r\n      } else {\r\n         bird.update();\r\n      }\r\n   } else {\r\n      background.draw(-backgroundScroll);\r\n      ground.draw(-groundScroll);\r\n   }\r\n}\r\n\r\ninit();\r\nanimate();\r\n\r\nwindow.addEventListener('keypress', ({ key }) => {\r\n   switch (key) {\r\n      case ' ':\r\n         if (!engine) return;\r\n         audio.jump.play();\r\n         bird.velocity.y = -3.8;\r\n         break;\r\n      case 'p':\r\n         break;\r\n      case 'Enter':\r\n         init();\r\n         engine = true;\r\n         containerUI.innerHTML = '';\r\n         console.log('game restarted');\r\n         break;\r\n   }\r\n});\r\n\r\nbtnJump.addEventListener('click', () => {\r\n   if (!engine) return;\r\n   audio.jump.play();\r\n   bird.velocity.y = -3.8;\r\n});\r\n\r\nbtnStart.addEventListener('click', () => {\r\n   init();\r\n   engine = true;\r\n   containerUI.innerHTML = '';\r\n});\r\n\r\naudio.backgroundMusic.play();\r\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$9423fef94170f602$export$ec664d7487540b","imageSrc","image","Image","src","$752e96d2e8e11898$export$2e2bcd8739ae039","static","$1a4822e33c4b16cb$export$93e3942b88430289","innerText","$1a4822e33c4b16cb$export$4af7667cd1547d3b","classList","remove","score","add","$463e8387a4344c0d$exports","URL","resolve","import","meta","url","toString","$e94bc60de79cf9c1$export$2e2bcd8739ae039","constructor","position","this","x","y","width","height","draw","$1a4822e33c4b16cb$export$db3b6bfb95261072","drawImage","update","$ed7a2e739de8399c$export$2e2bcd8739ae039","super","$fa120b00b78403ad$exports","$15221c1ae80a3cfa$export$2e2bcd8739ae039","$23d1dd1e5ec75ee8$exports","$1e0f8b185b86aa15$export$2e2bcd8739ae039","GRAVITY","velocity","collides","pipe","$1a4822e33c4b16cb$export$da184ea8aa3885df","$1a4822e33c4b16cb$export$2e2de98a97118ee","$f89d8ffbdc18f2ab$export$b791fe48eec8032a","$e0b370846536a191$exports","$d92531e7b45b5ead$export$2e2bcd8739ae039","PIPE_SCROLL","orientation","$parcel$interopDefault","$1a4822e33c4b16cb$export$c5f0d6696ae933ee","mirrorImage","horizontal","vertical","save","setTransform","restore","$4f49476eb7aa169a$export$2e2bcd8739ae039","pipes","$1a4822e33c4b16cb$export$116e029a3503791f","scored","forEach","$1a4822e33c4b16cb$export$6153d6da57d4629b","HowlerGlobal1","init","prototype","self","Howler1","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","e1","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","userAgent","checkOpera","match","isOldOpera","parseInt","split","checkSafari","indexOf","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","document","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","pop","testPlay","play","Promise","then","catch","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl1","o","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","str","exec","toLowerCase","location","protocol","slice","Sound1","loadBuffer","internal","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","index","apply","fade","from","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","Array","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","define","amd","Howler","Howl","$parcel$global","HowlerGlobal","Sound","_super","_pos","_orientation","stereo","pan","pos","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","$aaec1d357d70a8f7$export$2e2bcd8739ae039","backgroundMusic","jump","scoring","lost","$1a4822e33c4b16cb$var$backgroundScroll","$1a4822e33c4b16cb$var$groundScroll","$1a4822e33c4b16cb$export$67ea982130081db","getElementById","getContext","$1a4822e33c4b16cb$var$containerUI","querySelector","$1a4822e33c4b16cb$var$btnStart","$1a4822e33c4b16cb$var$btnJump","$1a4822e33c4b16cb$var$background","$1a4822e33c4b16cb$var$ground","$1a4822e33c4b16cb$var$bird","$1a4822e33c4b16cb$var$pipesPairs","$1a4822e33c4b16cb$var$spawnTimer","$1a4822e33c4b16cb$var$lastY","$1a4822e33c4b16cb$var$score","$1a4822e33c4b16cb$export$d3c662a6136faebb","$1a4822e33c4b16cb$var$msPrev","performance","$1a4822e33c4b16cb$var$init","$1a4822e33c4b16cb$export$10730452787c3720","random","insertAdjacentHTML","startScreen","$1a4822e33c4b16cb$var$animate","requestAnimationFrame","msNow","elapsed","fillStyle","fillRect","$1a4822e33c4b16cb$var$BACKGROUND_SCROLL_SPEED","$1a4822e33c4b16cb$var$GROUND_SCROLL_SPEED","floor","p","pair","lostScreen","innerHTML","log"],"version":3,"file":"index.ee2bf3dc.js.map"}